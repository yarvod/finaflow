name: master

on:
  push:
    branches: [ "master" ]

  workflow_dispatch:


jobs:
  check:
    name: Check changed files
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.check_files.outputs.backend }}
      web: ${{ steps.check_files.outputs.web }}
      redis: ${{ steps.check_files.outputs.redis }}
      postgres: ${{ steps.check_files.outputs.postgres }}
    environment:
      name: finaflow-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only ${{ github.event.before }} HEAD
          echo "========== check paths of modified files =========="
          git diff --name-only ${{ github.event.before }} HEAD > files.txt
          while IFS= read -r file; do
            echo $file
            if [[ $file == backend/* ]] || [[ $file == .github/* ]] || [[ $file == docker-compose.* ]]; then
              echo "backend=true" >> $GITHUB_OUTPUT
            fi
            if [[ $file == frontend/* ]] || [[ $file == .github/* ]] || [[ $file == docker-compose.* ]]; then
              echo "web=true" >> $GITHUB_OUTPUT
            fi
            if [[ $file == redis/* ]] || [[ $file == .github/* ]] || [[ $file == docker-compose.* ]]; then
              echo "redis=true" >> $GITHUB_OUTPUT
            fi
            if [[ $file == postgres/* ]] || [[ $file == .github/* ]] || [[ $file == docker-compose.* ]]; then
              echo "postgres=true" >> $GITHUB_OUTPUT
            fi
          done < files.txt
          echo $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check
    outputs:
      backend_rebuilt: ${{ steps.backend_rebuild.outputs.backend_rebuilt }}
    environment:
      name: finaflow-env
    steps:
      - name: Chekout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Log in to Registry
        run: echo ${{ secrets.GITHUB }} | docker login ghcr.io -u yarvod --password-stdin

      - if: needs.check.outputs.backend == 'true'
        id: backend_rebuild
        name: Backend -- build and push
        run: |
          docker build backend/ -t ghcr.io/yarvod/finaflow/finaflow-backend:${GITHUB_REF##*/}
          docker push ghcr.io/yarvod/finaflow/finaflow-backend:${GITHUB_REF##*/}
          echo "backend_rebuilt=true" >> $GITHUB_OUTPUT

      - if: needs.check.outputs.web == 'true'
        name: Frontend -- build and push
        run: |
          docker build frontend/ -t ghcr.io/yarvod/finaflow/finaflow-web:${GITHUB_REF##*/}
          docker push ghcr.io/yarvod/finaflow/finaflow-web:${GITHUB_REF##*/}

      - if: needs.check.outputs.redis == 'true'
        name: Redis -- build and push
        run: |
          docker build redis/ -t ghcr.io/yarvod/finaflow/finaflow-redis:${GITHUB_REF##*/}
          docker push ghcr.io/yarvod/finaflow/finaflow-redis:${GITHUB_REF##*/}

      - if: needs.check.outputs.postgres == 'true'
        name: Postgres -- build and push
        run: |
          docker build postgres/ -t ghcr.io/yarvod/finaflow/finaflow-postgres:${GITHUB_REF##*/}
          docker push ghcr.io/yarvod/finaflow/finaflow-postgres:${GITHUB_REF##*/}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: finaflow-env
    steps:
      - name: Restart services
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/finaflow/finaflow/
            git fetch --all
            git checkout ${GITHUB_REF##*/} --force
            git pull
            echo ${{ secrets.GITHUB }} | docker login ghcr.io -u yarvod --password-stdin
            env $(cat .env | grep ^[A-Z] | xargs) docker stack deploy -c docker-compose.prod.yaml --with-registry-auth prod